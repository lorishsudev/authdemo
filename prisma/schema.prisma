// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type MissionDataTasks {
  challenges MissionDataTasksChallenges[]
  status     String
  task_id    String                       @db.ObjectId
}

type MissionDataTasksChallenges {
  answer           String?
  answer_text      String?
  /// Multiple data types found: String: 50%, DateTime (Date): 50% out of 6 sampled entries
  approvedAt       Json
  description      String
  sn               String
  status           String
  /// Multiple data types found: String: 50%, DateTime (Date): 50% out of 6 sampled entries
  submittedAt      Json
  submitted_answer String
  type             String
}

type TasksChallenges {
  answer      String
  description String
  sn          String
  type        String
}

model Mission_Data {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  mission_id String   @db.ObjectId
  player_id  String   @db.ObjectId
  status     String
  tasks      MissionDataTasks[]

  // 添加關聯：一個 Mission_Data 屬於一個 Missions
  missions   Missions @relation(fields: [mission_id], references: [id])
}



model Missions {
  
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  description        String?
  mission_type       String?
  name               String
  category           String?
  views              Int? @default(0)  // 預設值 0，不用檢查
  start_time         DateTime?
  end_time           DateTime?
  createdAt  DateTime?   @default(now())
  updatedAt  DateTime?   @updatedAt

  // 添加關聯：一個 Missions 可以有多個 Mission_Data
  mission_data       Mission_Data[]
}

model Tasks {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  challenges  TasksChallenges[]
  description String
  mission_id  String            @db.ObjectId
  name        String
  order       String
}

model accounts {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  access_token      String
  expires_at        Int
  id_token          String
  provider          String
  providerAccountId String
  scope             String
  token_type        String
  type              String
  userId            String @db.ObjectId
}

model sessions {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  expires      DateTime @db.Date
  sessionToken String
  userId       String   @db.ObjectId
}

model users {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  email         String
  /// Could not determine type: the field only had null or empty values in the sample set.
  emailVerified Json?
  image         String
  name          String
}

